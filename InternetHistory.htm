<!DOCTYPE html>
<html>
<head>
<title>The History of the Internet</title>

<style>
body {
  background-color: black;
}

h1 {text-align: center;
    color: white;}
h2 {text-align: center;
    color: white;}
h4 {text-align: center;
    color: white;}
h5 {text-align: center;
    color: white;}

p {text-align: left;
   color: white;}

</style>

</head>
<body>

<h1>The History of the Internet</h1>
<h4>With Source Code References</h4>
<h5>Last updated October 18, 2023.<br>
Copyright &copy; Eric Chauvin 2023.</h5>

<br>

<p>In 1969 there were four
 computers on the ARPANET: The University
 of Utah, Stanford Research Institute,
 UCLA, and UCSB.
</p>

<p>This history of the Internet is based
 on Request For Comments (RFC) documents
 and so it goes back to 1968, when the
 Advanced Research Projects Agency
 supported research and experiments on
 the ARPANET. There is an
 <a href="https://www.rfc-editor.org/rfc-index.html">
 index to all RFC documents.</a>
 RFC 3 describes what they meant by what is
 now called an RFC.  But in those very early
 days the people working on this all
 knew each other and they could
 write RFCs that were just notes between
 people in the working group, something
 like "I talked with Bob Kahn yesterday
 and...".  They weren't like the formal
 documents of today.  There are
 over 8,000 RFC documents.  I just point out
 the good ones.
</p>

<p>Suggestions and corrections are
 appreciated.
</p>

<p>The very first RFC document, RFC 1,
 was posted in April 1969.  It describes
 some background for what happened in 1968
 and it describes a very basic type of
 network.
</p>

<p>RFC 114<br>
April 1971<br>
One of the
 earliest network protocols was the File Transfer
 Protocol (FTP).
</p>

<p>RFC 196<br>
July 1971<br>
The first email protocol was Mail Box
 Protocol, but that was
 just for sending files to a specific site,
 to a computer, not to a person.
</p>

<p>RFC 675<br>
December 1974<br>
I think the first time the word <i>Internet</i>
 is used in the title of an RFC is in RFC 675,
 Specification of Internet Transmission
 Control Program in 1974.  For a while they
 called it the ARPA-Internet, rather than just
 the Internet.
</p>

<p>RFC 760<br>
January 1980<br>
What we now call TCP/IP, pretty
 much the fundamental protocols for the Internet,
 were shown in RFC 760, the DoD standard
 Internet Protocol, followed by
 RFC 761 DoD standard Transmission
 Control Protocol in 1980.
</p>

<!--
<p>RFC 777<br>
April 1981<br>
First ICMP:
Internet Control Message Protocol.
</p>
-->

<p>RFC 788<br>
November 1981<br>
The first main email protocol,
 for sending mail to another person, not just
 a computer, was Simple Mail Transfer
 Protocol.
</p>

<p>RFC 799<br>
September 1981<br>
An early version of Domain Name Service (DNS).
 Before DNS you didn't connect to a computer
 by name, but by an address.  It is where
 the expression <i>dot-com</i> comes from.
</p>

<!--
<p>RFC 821<br>
August 1982<br>
Simple Mail Transfer Protocol.
</p>
-->

<p>RFC 918<br>
October 1984<br>
Post Office Protocol.  This was so a
 personal computer could <i>receive</i> email.
</p>

<p>RFC 989<br>
February 1987<br>
Privacy Enhancement for Internet Electronic
 Mail: Part I: Message Encipherment and
 Authentication Procedures<br>
This might be the first RFC that mentions
 cryptography, but it is just an outline
 of what is in RFC 1421 through RFC 1424.
</p>


<p>This document is always a work in progress
 because I am always studying RFCs.
 Since I am working on Transport Layer
 Security (RFC 8446) this history leans
 a lot toward the very many RFCs involved
 in that protocol and things that I study and
 what I am interested in.
</p>

<p>Source code files for protocols described
 in RFCs are mostly in the
 <a href="https://github.com/EricInArizona/Network">
 Network repository</a>.  Things for Cryptography
 are in the
 <a href="https://github.com/EricInArizona/CryptoBase">
 CryptoBase repository</a>.
 Check the
 <a href="https://github.com/EricInArizona/CppBase">
 CppBase repository</a> for things that are basic
 to almost all C++ programming like buffers for
 bytes.
</p>

<p>An RFC is not a guide, but
 a programming language is expressive and
 explanatory.  C++ is an expressive language,
 so it can be used to clearly
 express an idea.  You can read the
 source code and see exactly how
 something is done.
 You can see what the RFC is supposed to
 describe.  There are also notes in the
 source code about the details.
</p>


<p>RFC 1081<br>
November 1988<br>
POP3: Post Office Protocol version 3.
</p>

<p>RFC 1114<br>
August 1989<br>
Privacy enhancement for Internet electronic
 mail: Part II - certificate-based key
 management<br>
I think this is the first mention of
 X.509 Certificates in an RFC.  It also might
 be the first mention of the RSA Cryptosystem
 in an RFC.
</p>

<p>RFC 1186<br>
October 1990<br>
MD4 Message Digest Algorithm, one of the
 early hash algorithms.
</p>

<!--
<p>RFC 1319<br>
April 1992<br>
The MD2 Message-Digest Algorithm
</p>

<p>RFC 1320<br>
April 1992<br>
The MD4 Message-Digest Algorithm
</p>
-->

<p>RFC 1321<br>
April 1992<br>
The MD5 Message-Digest Algorithm
</p>

<p>RFC 1421<br>
February 1993<br>
RFCs 1421 through 1424 describe Privacy
 Enhanced Mail which is where Cryptography
 and X.509 Certificates really get defined
 in clear protocols.
<br>
RFC 1421: Part I: Message
 Encryption and Authentication Procedures
<br>
RFC 1422: Part II: Certificate-Based
 Key Management
<br>
RFC 1423: Part III: Algorithms,
 Modes, and Identifiers
<br>
RFC 1424: Part IV: Key
 Certification and Related Services
</p>


<p>RFC 1866<br>
November 1995<br>
Hypertext Markup Language - 2.0.
 The beginnings of the World Wide Web.
 It says: "HTML has been in use
 by the World Wide Web (WWW) global information
 initiative since 1990."
 By this time it was starting
 to become popular.
</p>

<p>RFC 2104<br>
February 1997<br>
HMAC: Keyed-Hashing for Message Authentication
February 1997
</p>

<p>RFC 2246<br>
January 1999<br>
Transport Layer Security 1.0.
 This RFC says:
 "This document and the TLS protocol itself
 are based on the SSL 3.0 Protocol Specification
 as published by Netscape."
 Netscape developed Secure Socket Layer going
 back to before 1995.  TLS 1.0 is almost
 the same as SSL 3.0.  Diffie-Hellman is
 used here too.
</p>

<!--
<p>RFC 2314<br>
March 1998<br>
PKCS #10: Certification Request Syntax
 Version 1.5
</p>

<p>RFC 2315<br>
March 1998<br>
PKCS #7: Cryptographic Message Syntax
 Version 1.5
</p>
-->

<p>RFC 2313<br>
March 1998<br>
PKCS #1: RSA Encryption
Version 1.5.<br>See RFC 8017.
</p>

<p>RFC 2437<br>
October 1998<br>
PKCS #1: RSA Cryptography Specifications
 Version 2.0<br>This version uses the two
 primes P and Q and later versions of RSA,
 like RFC 3447 and later,
 can use any number of primes.
</p>

<p>RFC 2459<br>
January 1999<br>
Internet X.509 Public Key Infrastructure
Certificate and CRL Profile
</p>

<p>RFC 2510<br>
March 1999<br>
Internet X.509 Public Key Infrastructure
 Certificate Management Protocols
</p>

<p>RFC 2511<br>
March 1999<br>
Internet X.509 Certificate Request Message
 Format
</p>

<p>RFC 2527<br>
March 1999<br>
Internet X.509 Public Key Infrastructure
 Certificate Policy and Certification Practices
 Framework
</p>

<p>RFC 2528<br>
March 1999<br>
Internet X.509 Public Key Infrastructure
 Representation of Key Exchange Algorithm
 (KEA) Keys in Internet X.509 Public
 Key Infrastructure Certificates
</p>

<p>RFC 2559<br>
April 1999<br>
Internet X.509 Public Key Infrastructure
 Operational Protocols - LDAPv2
</p>

<p>RFC 2560<br>
June 1999<br>
X.509 Internet Public
 Key Infrastructure Online Certificate
 Status Protocol - OCSP
</p>

<p>RFC 2585<br>
May 1999<br>
Internet X.509 Public Key Infrastructure
 Operational Protocols: FTP and HTTP
</p>

<p>RFC 2587<br>
June 1999<br>
Internet X.509 Public Key Infrastructure
 LDAPv2 Schema
</p>

<p>RFC 2986<br>
November 2000<br>
PKCS #10: Certification Request Syntax
 Specification Version 1.7
</p>

<p>RFC 3029<br>
February 2001<br>
Internet X.509 Public Key Infrastructure
 Data Validation and Certification
 Server Protocols
</p>

<p>RFC 3039<br>
January 2001<br>
Internet X.509 Public Key Infrastructure
 Qualified Certificates Profile
</p>

<p>RFC 3161<br>
August 2001<br>
Internet X.509 Public Key Infrastructure
 Time-Stamp Protocol (TSP)
</p>


<p>RFC 3174<br>
September 2001<br>
US Secure Hash Algorithm 1 (SHA1)
</p>

<p>RFC 3279<br>
April 2002<br>
Algorithms and Identifiers for the
 Internet X.509 Public Key Infrastructure
 Certificate and Certificate Revocation
 List (CRL) Profile
</p>

<p>RFC 3280<br>
April 2002<br>
Internet X.509 Public Key
 Infrastructure Certificate and
 Certificate Revocation List (CRL)
  Profile
</p>



<p>RFC 3447<br>
February 2003<br>
Public-Key Cryptography Standards
 (PKCS) #1: RSA Cryptography
 Specifications Version 2.1
</p>

<p>RFC 3647<br>
November 2003<br>
Internet X.509 Public Key Infrastructure
 Certificate Policy and Certification Practices
 Framework
</p>

<p>RFC 3709<br>
February 2004<br>
Internet X.509 Public Key Infrastructure:
 Logotypes in X.509 Certificates
</p>

<p>RFC 3739<br>
March 2004<br>
Internet X.509 Public Key Infrastructure:
 Qualified Certificates Profile
</p>

<p>RFC 3779<br>
June 2004<br>
X.509 Extensions for IP Addresses and
 AS Identifiers
</p>

<p>RFC 3820<br>
June 2004<br>
Internet X.509 Public Key Infrastructure
 (PKI) Proxy Certificate Profile
</p>

<p>RFC 4043<br>
May 2005<br>
Internet X.509 Public Key Infrastructure
 Permanent Identifier
</p>

<p>RFC 4055<br>
June 2005<br>
Additional Algorithms and Identifiers for
 RSA Cryptography for use in the Internet X.509
 Public Key Infrastructure Certificate and
 Certificate Revocation List
 (CRL) Profile
</p>

<p>RFC 4056<br>
June 2005<br>
Use of the RSASSA-PSS
 Signature Algorithm in Cryptographic
 Message Syntax (CMS)
</p>

<p>RFC 4059<br>
May 2005<br>
Internet X.509 Public Key Infrastructure
 Warranty Certificate Extension
</p>

<p>RFC 4158<br>
September 2005<br>
Internet X.509 Public Key Infrastructure:
 Certification Path Building
</p>

<p>RFC 4210<br>
September 2005<br>
Internet X.509 Public Key Infrastructure
 Certificate Management Protocol (CMP)
</p>

<p>RFC 4211<br>
September 2005<br>
Internet X.509 Public Key Infrastructure
 Certificate Request Message Format (CRMF)
</p>

<p>RFC 4212<br>
October 2005<br>
Alternative Certificate Formats for the
 Public-Key Infrastructure Using
 X.509 (PKIX) Certificate Management
 Protocols
</p>

<p>RFC 4262<br>
December 2005<br>
X.509 Certificate Extension for
 Secure/Multipurpose Internet Mail
 Extensions (S/MIME) Capabilities
</p>

<p>RFC 4325<br>
December 2005<br>
Internet X.509 Public Key Infrastructure
 Authority Information Access Certificate
 Revocation List (CRL) Extension
</p>

<p>RFC 4386<br>
February 2006<br>
Internet X.509 Public Key Infrastructure
 Repository Locator Service
</p>

<p>RFC 4387<br>
February 2006<br>
Internet X.509 Public Key Infrastructure
 Operational Protocols: Certificate
 Store Access via HTTP
</p>

<p>RFC 4418<br>
March 2006<br>
UMAC: Message Authentication Code using
 Universal Hashing
</p>

<p>RFC 4491<br>
May 2006<br>
Using the GOST R 34.10-94, GOST R 34.10-2001,
 and GOST R 34.11-94 Algorithms with the
 Internet X.509 Public Key Infrastructure
 Certificate and CRL Profile
</p>

<p>RFC 4523<br>
June 2006<br>
Lightweight Directory Access Protocol
 (LDAP) Schema Definitions for
 X.509 Certificates
</p>

<p>RFC 4630<br>
August 2006<br>
Update to DirectoryString Processing
 in the Internet X.509 Public Key
 Infrastructure Certificate and
 Certificate Revocation List (CRL)
 Profile
</p>

<p>RFC 4634<br>
July 2006<br>
US Secure Hash Algorithms (SHA and HMAC-SHA)
</p>

<p>RFC 4683<br>
October 2006<br>
Internet X.509 Public Key Infrastructure
 Subject Identification Method (SIM)
</p>

<p>RFC 4985<br>
August 2007<br>
Internet X.509 Public Key Infrastructure
 Subject Alternative Name for Expression
 of Service Name
</p>

<p>RFC 5280<br>
May 2008<br>
Internet X.509 Public Key Infrastructure
 Certificate and Certificate Revocation
 List (CRL) Profile<br>
 See Certificate.cpp.
</p>

<p>RFC 5708<br>
January 2010<br>
X.509 Key and Signature Encoding for
 the KeyNote Trust Management System
</p>

<p>RFC 5756<br>
January 2010<br>
Updates for RSAES-OAEP and RSASSA-PSS
 Algorithm Parameters
</p>

<p>RFC 5758<br>
January 2010<br>
Internet X.509 Public Key Infrastructure:
 Additional Algorithms and Identifiers
 for DSA and ECDSA
</p>

<p>RFC 5831<br>
March 2010<br>
GOST R 34.11-94: Hash Function Algorithm
</p>

<p>RFC 5912<br>
June 2010<br>
New ASN.1 Modules for the Public Key
 Infrastructure Using X.509 (PKIX)
</p>

<p>RFC 5924<br>
June 2010<br>
Extended Key Usage (EKU) for Session
 Initiation Protocol (SIP) X.509
 Certificates
</p>

<p>RFC 6066<br>
January 2011<br>
Transport Layer Security (TLS)
 Extensions: Extension Definitions
</p>

<p>RFC 6125<br>
March 2011<br>
Representation and Verification of
 Domain-Based Application Service
 Identity within Internet Public Key
 Infrastructure Using X.509 (PKIX)
 Certificates in the Context of
 Transport Layer Security (TLS)
</p>

<p>RFC 6170<br>
May 2011<br>
Internet X.509 Public Key Infrastructure
 -- Certificate Image
</p>

<p>RFC 6187<br>
March 2011<br>
X.509v3 Certificates for
 Secure Shell Authentication
</p>


<p>RFC 6234<br>
May 2011<br>
US Secure Hash Algorithms (SHA and SHA-based
 HMAC and HKDF)
</p>

<p>RFC 6268<br>
July 2011<br>
Additional New ASN.1 Modules for the
 Cryptographic Message Syntax (CMS) and
 the Public Key Infrastructure Using
 X.509 (PKIX)
</p>

<p>RFC 6487<br>
February 2012<br>
A Profile for X.509 PKIX Resource
 Certificates
</p>


<p>RFC 6520<br>
February 2012<br>
Transport Layer Security
 (TLS) and Datagram Transport Layer
 Security (DTLS) Heartbeat Extension.
 This is where the infamous Heart Bleed bug
 happened in OpenSSL.
</p>

<p>RFC 6712<br>
September 2012<br>
Internet X.509 Public Key Infrastructure
 -- HTTP Transfer for the Certificate
 Management Protocol (CMP)
</p>


<p>RFC 6818<br>
January 2013<br>
Updates to the Internet X.509 Public Key
 Infrastructure Certificate and
 Certificate Revocation List (CRL) Profile
</p>

<p>RFC 6960<br>
June 2013<br>
X.509 Internet Public Key Infrastructure
 Online Certificate Status Protocol - OCSP
</p>

<p>RFC 6962<br>
June 2013<br>
Certificate Transparency
</p>

<p>RFC 6986<br>
August 2013<br>
GOST R 34.11-2012: Hash Function
</p>

<p>RFC 7250<br>
June 2014<br>
Using Raw Public Keys in
 Transport Layer Security (TLS) and
 Datagram Transport Layer Security (DTLS)
</p>

<p>RFC 7589<br>
June 2015<br>
Using the NETCONF Protocol over
 Transport Layer Security (TLS) with Mutual
 X.509 Authentication
</p>

<p>RFC 7627<br>
September 2015<br>
Transport Layer Security (TLS) Session
 Hash and Extended Master Secret Extension
</p>

<p>RFC 7633<br>
October 2015<br>
X.509v3 Transport Layer Security (TLS)
 Feature Extension
</p>

<p>RFC 7685<br>
October 2015<br>
A Transport Layer Security (TLS) ClientHello
 Padding Extension
</p>

<p>RFC 7693<br>
November 2015<br>
The BLAKE2 Cryptographic Hash and Message
 Authentication Code (MAC)
</p>


<p>RFC 7919<br>
August 2016<br>
Negotiated Finite Field
 Diffie-Hellman Ephemeral Parameters
 for Transport Layer Security (TLS)
</p>

<p>RFC 8017<br>
November 2016<br>
PKCS #1: RSA Cryptography Specifications
 Version 2.2.<br>
 The RSA Crypto System is shown
 in Rsa.cpp, Garner.cpp, and RsaTest.cpp.
 See: <a href="https://ericinarizona.github.io/GarnerRsa.htm">
 Garner's Formula and RSA</a>.
</p>

<p>RFC 8398<br>
May 2018<br>
Internationalized Email Addresses in
 X.509 Certificates
</p>

<p>RFC 8410<br>
August 2018<br>
Algorithm Identifiers for Ed25519,
 Ed448, X25519, and X448 for Use in the
 Internet X.509 Public Key Infrastructure
</p>



<p>RFC 8422<br>
August 2018<br>
Elliptic Curve Cryptography (ECC)
 Cipher Suites for Transport Layer
 Security (TLS)
 Versions 1.2 and Earlier
</p>

<p>RFC 8446<br>
August 2018<br>
The Transport Layer Security (TLS) Protocol
 Version 1.3.  See the source code in the
 <a href="https://github.com/EricInArizona/TlsClient">
 TlsClient repository</a>
 and the
 <a href="https://github.com/EricInArizona/TlsServer">
 TlsServer repository</a>
 and the
 <a href="https://github.com/EricInArizona/Network">
 Network repository</a>.
 Things for Cryptography
 are in the
 <a href="https://github.com/EricInArizona/CryptoBase">
 CryptoBase repository</a>.
</p>

<p>RFC 8448<br>
January 2019<br>
Example Handshake Traces for TLS 1.3
 It would be impossible to write the source
 code for TLS without the test vectors in
 this RFC.
</p>

<p>RFC 8692<br>
December 2019<br>
Internet X.509 Public Key Infrastructure:
 Additional Algorithm Identifiers for
 RSASSA-PSS and ECDSA Using SHAKEs
</p>

<p>RFC 9045<br>
June 2021<br>
Algorithm Requirements Update to the Internet
 X.509 Public Key Infrastructure Certificate
 Request Message Format (CRMF)
</p>

<p>RFC 9155<br>
December 2021<br>
Deprecating MD5 and SHA-1 Signature
 Hashes in TLS 1.2 and DTLS 1.2
</p>

<p>RFC 9180<br>
February 2022<br>
Hybrid Public Key Encryption
</p>


<p>RFC 9215<br>
March 2022<br>
Using GOST R 34.10-2012 and GOST R
 34.11-2012 Algorithms with the Internet
 X.509 Public Key Infrastructure
</p>

<p>RFC 9310<br>
January 2023<br>
X.509 Certificate Extension for 5G
 Network Function Types
</p>

<p>RFC 9336<br>
December 2022<br>
X.509 Certificate General-Purpose Extended
 Key Usage (EKU) for Document Signing
</p>

<p>RFC 9360<br>
February 2023<br>
CBOR Object Signing and Encryption (COSE):
 Header Parameters for Carrying and Referencing
 X.509 Certificates
</p>




<br>
<p><a href="https://github.com/EricInArizona">
Source Code</a>
</p>

<p><a href="https://ericinarizona.github.io/">
Main Page</a>
<br><br>
</p>


</body>
</html>
